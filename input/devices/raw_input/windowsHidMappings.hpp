#pragma once

#include <map>

#include <WinUser.h>
#include <hidusage.h>

#include "../../inputType.hpp"

struct HidInfo
{
	byte hid_vkey;
	bool is_analog;
	const char* friendly_name;
};

const std::map<InputType, HidInfo> hid_mappings {
	{InputType::A, {static_cast<byte>('a'), false, "A"}},
	{InputType::B, {static_cast<byte>('b'), false, "B"}},
	{InputType::C, {static_cast<byte>('c'), false, "C"}},
	{InputType::D, {static_cast<byte>('d'), false, "D"}},
	{InputType::E, {static_cast<byte>('e'), false, "E"}},
	{InputType::F, {static_cast<byte>('f'), false, "F"}},
	{InputType::G, {static_cast<byte>('g'), false, "G"}},
	{InputType::H, {static_cast<byte>('h'), false, "H"}},
	{InputType::I, {static_cast<byte>('i'), false, "I"}},
	{InputType::J, {static_cast<byte>('j'), false, "J"}},
	{InputType::K, {static_cast<byte>('k'), false, "K"}},
	{InputType::L, {static_cast<byte>('l'), false, "L"}},
	{InputType::M, {static_cast<byte>('m'), false, "M"}},
	{InputType::N, {static_cast<byte>('n'), false, "N"}},
	{InputType::O, {static_cast<byte>('o'), false, "O"}},
	{InputType::P, {static_cast<byte>('p'), false, "P"}},
	{InputType::Q, {static_cast<byte>('q'), false, "Q"}},
	{InputType::R, {static_cast<byte>('r'), false, "R"}},
	{InputType::S, {static_cast<byte>('s'), false, "S"}},
	{InputType::T, {static_cast<byte>('t'), false, "T"}},
	{InputType::U, {static_cast<byte>('u'), false, "U"}},
	{InputType::V, {static_cast<byte>('v'), false, "V"}},
	{InputType::W, {static_cast<byte>('w'), false, "W"}},
	{InputType::X, {static_cast<byte>('x'), false, "X"}},
	{InputType::Y, {static_cast<byte>('y'), false, "Y"}},
	{InputType::Z, {static_cast<byte>('z'), false, "Z"}},

	// Number Keys
	{InputType::Number_1, {static_cast<byte>('1'), false, "1"}},
	{InputType::Number_2, {static_cast<byte>('2'), false, "2"}},
	{InputType::Number_3, {static_cast<byte>('3'), false, "3"}},
	{InputType::Number_4, {static_cast<byte>('4'), false, "4"}},
	{InputType::Number_5, {static_cast<byte>('5'), false, "5"}},
	{InputType::Number_6, {static_cast<byte>('6'), false, "6"}},
	{InputType::Number_7, {static_cast<byte>('7'), false, "7"}},
	{InputType::Number_8, {static_cast<byte>('8'), false, "8"}},
	{InputType::Number_9, {static_cast<byte>('9'), false, "9"}},
	{InputType::Number_0, {static_cast<byte>('0'), false, "0"}},

	// "Main" Keys
	{InputType::Left_Shift, {static_cast<byte>(VK_LSHIFT), false, "Shift (left)"}},
	{InputType::Right_Shift, {static_cast<byte>(VK_RSHIFT), false, "Shift (right)"}},
	{InputType::Left_Alt, {static_cast<byte>(VK_LMENU), false, "Alt (left)"}},
	{InputType::Right_Alt, {static_cast<byte>(VK_RMENU), false, "Alt (right)"}},
	{InputType::Left_Ctrl, {static_cast<byte>(VK_LCONTROL), false, "Ctrl (left)"}},
	{InputType::Right_Ctrl, {static_cast<byte>(VK_RCONTROL), false, "Ctrl (right)"}},
	{InputType::Left_Windows, {static_cast<byte>(VK_LWIN), false, "Windows (left)"}},
	{InputType::Right_Windows, {static_cast<byte>(VK_RWIN), false, "Windows (right)"}},
	{InputType::Tab, {static_cast<byte>(VK_TAB), false, "Tab"}},
	{InputType::Space, {static_cast<byte>(VK_SPACE), false, "Spacebar"}},
	{InputType::Backtick, {static_cast<byte>(VK_OEM_3), false, "`"}},
	{InputType::Minus, {static_cast<byte>(VK_OEM_MINUS), false, "-"}},
	{InputType::Plus, {static_cast<byte>(VK_OEM_PLUS), false, "="}},
	{InputType::Backspace, {static_cast<byte>(VK_BACK), false, "Backspace"}},
	{InputType::Left_Bracket, {static_cast<byte>(VK_OEM_4), false, "["}},
	{InputType::Right_Bracket, {static_cast<byte>(VK_OEM_6), false, "]"}},
	{InputType::Semicolon, {static_cast<byte>(VK_OEM_1), false, ";"}},
	{InputType::Quote, {static_cast<byte>(VK_OEM_7), false, "'"}},
	{InputType::Back_Slash, {static_cast<byte>(VK_OEM_5), false, "\\"}},
	{InputType::Comma, {static_cast<byte>(VK_OEM_COMMA), false, ","}},
	{InputType::Period, {static_cast<byte>(VK_OEM_PERIOD), false, "."}},
	{InputType::Slash, {static_cast<byte>(VK_OEM_2), false, "/"}},
	{InputType::Escape, {static_cast<byte>(VK_ESCAPE), false, "Esc"}},
	{InputType::Enter, {static_cast<byte>(VK_RETURN), false, "Enter"}},
	{InputType::Number_Lock, {static_cast<byte>(VK_NUMLOCK), false, "Num Lock"}},
	{InputType::Scroll_Lock, {static_cast<byte>(VK_SCROLL), false, "Scroll Lock"}},
	{InputType::Caps_Lock, {static_cast<byte>(VK_CAPITAL), false, "Caps Lock"}},

	// Navigation Keys
	{InputType::Home, {static_cast<byte>(VK_HOME), false, "Home"}},
	{InputType::End, {static_cast<byte>(VK_END), false, "End"}},
	{InputType::Page_Up, {static_cast<byte>(VK_PRIOR), false, "Page Up"}},
	{InputType::Page_Down, {static_cast<byte>(VK_NEXT), false, "Page Down"}},
	{InputType::Delete, {static_cast<byte>(VK_DELETE), false, "Delete"}},
	{InputType::Up, {static_cast<byte>(VK_UP), false, "Up Arrow"}},
	{InputType::Down, {static_cast<byte>(VK_DOWN), false, "Down Arrow"}},
	{InputType::Left, {static_cast<byte>(VK_LEFT), false, "Left Arrow"}},
	{InputType::Right, {static_cast<byte>(VK_RIGHT), false, "Right Arrow"}},
	{InputType::Insert, {static_cast<byte>(VK_INSERT), false, "Insert"}},
	{InputType::Print_Screen, {static_cast<byte>(VK_SNAPSHOT), false, "Print Screen"}},
	{InputType::Print, {static_cast<byte>(VK_PRINT), false, "Print"}},
	{InputType::Help, {static_cast<byte>(VK_HELP), false, "Help"}},
	{InputType::Execute, {static_cast<byte>(VK_EXECUTE), false, "Execute"}},
	{InputType::Select, {static_cast<byte>(VK_SELECT), false, "Select"}},

	// Function Keys
	{InputType::Function_1, {static_cast<byte>(VK_F1), false, "F1"}},
	{InputType::Function_2, {static_cast<byte>(VK_F2), false, "F2"}},
	{InputType::Function_3, {static_cast<byte>(VK_F3), false, "F3"}},
	{InputType::Function_4, {static_cast<byte>(VK_F4), false, "F4"}},
	{InputType::Function_5, {static_cast<byte>(VK_F5), false, "F5"}},
	{InputType::Function_6, {static_cast<byte>(VK_F6), false, "F6"}},
	{InputType::Function_7, {static_cast<byte>(VK_F7), false, "F7"}},
	{InputType::Function_8, {static_cast<byte>(VK_F8), false, "F8"}},
	{InputType::Function_9, {static_cast<byte>(VK_F9), false, "F9"}},
	{InputType::Function_10, {static_cast<byte>(VK_F10), false, "F10"}},
	{InputType::Function_11, {static_cast<byte>(VK_F11), false, "F11"}},
	{InputType::Function_12, {static_cast<byte>(VK_F12), false, "F12"}},
	{InputType::Function_13, {static_cast<byte>(VK_F13), false, "F13"}},
	{InputType::Function_14, {static_cast<byte>(VK_F14), false, "F14"}},
	{InputType::Function_15, {static_cast<byte>(VK_F15), false, "F15"}},
	{InputType::Function_16, {static_cast<byte>(VK_F16), false, "F16"}},
	{InputType::Function_17, {static_cast<byte>(VK_F17), false, "F17"}},
	{InputType::Function_18, {static_cast<byte>(VK_F18), false, "F18"}},
	{InputType::Function_19, {static_cast<byte>(VK_F19), false, "F19"}},
	{InputType::Function_20, {static_cast<byte>(VK_F20), false, "F20"}},
	{InputType::Function_21, {static_cast<byte>(VK_F21), false, "F21"}},
	{InputType::Function_22, {static_cast<byte>(VK_F22), false, "F22"}},
	{InputType::Function_23, {static_cast<byte>(VK_F23), false, "F23"}},
	{InputType::Function_24, {static_cast<byte>(VK_F24), false, "F24"}},

	// Number Pad Keys
	{InputType::Numpad_0, {static_cast<byte>(VK_NUMPAD0), false, "Numpad 0"}},
	{InputType::Numpad_1, {static_cast<byte>(VK_NUMPAD1), false, "Numpad 1"}},
	{InputType::Numpad_2, {static_cast<byte>(VK_NUMPAD2), false, "Numpad 2"}},
	{InputType::Numpad_3, {static_cast<byte>(VK_NUMPAD3), false, "Numpad 3"}},
	{InputType::Numpad_4, {static_cast<byte>(VK_NUMPAD4), false, "Numpad 4"}},
	{InputType::Numpad_5, {static_cast<byte>(VK_NUMPAD5), false, "Numpad 5"}},
	{InputType::Numpad_6, {static_cast<byte>(VK_NUMPAD6), false, "Numpad 6"}},
	{InputType::Numpad_7, {static_cast<byte>(VK_NUMPAD7), false, "Numpad 7"}},
	{InputType::Numpad_8, {static_cast<byte>(VK_NUMPAD8), false, "Numpad 8"}},
	{InputType::Numpad_9, {static_cast<byte>(VK_NUMPAD9), false, "Numpad 9"}},
	{InputType::Numpad_Period, {static_cast<byte>(VK_DECIMAL), false, "Numpad ."}},
	{InputType::Numpad_Slash, {static_cast<byte>(VK_DIVIDE), false, "Numpad /"}},
	{InputType::Numpad_Astrisk, {static_cast<byte>(VK_MULTIPLY), false, "Numpad *"}},
	{InputType::Numpad_Dash, {static_cast<byte>(VK_SUBTRACT), false, "Numpad -"}},
	{InputType::Numpad_Plus, {static_cast<byte>(VK_ADD), false, "Numpad +"}},
	// {InputType::Numpad_Enter, {VK_, false}},

	// Mouse Inputs
	{InputType::Mouse_Left, {static_cast<byte>(NULL), false, "Mouse Left Button"}},
	{InputType::Mouse_Right, {static_cast<byte>(NULL), false, "Mouse Right Button"}},
	{InputType::Mouse_Center, {static_cast<byte>(NULL), false, "Mouse Center Button"}},
	{InputType::Mouse_X, {static_cast<byte>(NULL), true, "Mouse Position X-Axis"}},
	{InputType::Mouse_Y, {static_cast<byte>(NULL), true, "Mouse Position Y-Axis"}},
	{InputType::Mouse_Scroll_Wheel, {static_cast<byte>(NULL), true, "Mouse Scroll Wheel"}},

	// Gamepad Controller Inputs
	{InputType::Gamepad_A, {static_cast<byte>(VK_GAMEPAD_A), false, "A"}},
	{InputType::Gamepad_B, {static_cast<byte>(VK_GAMEPAD_B), false, "B"}},
	{InputType::Gamepad_X, {static_cast<byte>(VK_GAMEPAD_X), false, "X"}},
	{InputType::Gamepad_Y, {static_cast<byte>(VK_GAMEPAD_Y), false, "Y"}},
	{InputType::Gamepad_Left_Shoulder, {static_cast<byte>(VK_GAMEPAD_LEFT_SHOULDER), false, "L1"}},
	{InputType::Gamepad_Right_Shoulder, {static_cast<byte>(VK_GAMEPAD_RIGHT_SHOULDER), false, "R1"}},
	{InputType::Gamepad_Left_Trigger, {static_cast<byte>(VK_GAMEPAD_LEFT_TRIGGER), true, "L2"}},
	{InputType::Gamepad_Right_Trigger, {static_cast<byte>(VK_GAMEPAD_RIGHT_TRIGGER), true, "R2"}},
	{InputType::Gamepad_Dpad_Up, {static_cast<byte>(VK_GAMEPAD_DPAD_UP), false, "Up"}},
	{InputType::Gamepad_Dpad_Down, {static_cast<byte>(VK_GAMEPAD_DPAD_DOWN), false, "Down"}},
	{InputType::Gamepad_Dpad_Left, {static_cast<byte>(VK_GAMEPAD_DPAD_LEFT), false, "Left"}},
	{InputType::Gamepad_Dpad_Right, {static_cast<byte>(VK_GAMEPAD_DPAD_RIGHT), false, "Right"}},
	{InputType::Gamepad_Menu, {static_cast<byte>(VK_GAMEPAD_MENU), false, "Start"}},
	{InputType::Gamepad_View, {static_cast<byte>(VK_GAMEPAD_VIEW), false, "Select"}},
	{InputType::Gamepad_Left_Thumbstick_X, {static_cast<byte>(NULL), true, "Left Thumbstick X-Axis"}},
	{InputType::Gamepad_Left_Thumbstick_Y, {static_cast<byte>(NULL), true, "Left Thumbstick Y-Axis"}},
	{InputType::Gamepad_Right_Thumbstick_X, {static_cast<byte>(NULL), true, "Right Thumbstick X-Axis"}},
	{InputType::Gamepad_Right_Thumbstick_Y, {static_cast<byte>(NULL), true, "Right Thumbstick Y-Axis"}},
};

const std::map<byte, InputType> input_type_mappings {
	{static_cast<byte>('a'), InputType::A},
	{static_cast<byte>('b'), InputType::B},
	{static_cast<byte>('c'), InputType::C},
	{static_cast<byte>('d'), InputType::D},
	{static_cast<byte>('e'), InputType::E},
	{static_cast<byte>('f'), InputType::F},
	{static_cast<byte>('g'), InputType::G},
	{static_cast<byte>('h'), InputType::H},
	{static_cast<byte>('i'), InputType::I},
	{static_cast<byte>('j'), InputType::J},
	{static_cast<byte>('k'), InputType::K},
	{static_cast<byte>('l'), InputType::L},
	{static_cast<byte>('m'), InputType::M},
	{static_cast<byte>('n'), InputType::N},
	{static_cast<byte>('o'), InputType::O},
	{static_cast<byte>('p'), InputType::P},
	{static_cast<byte>('q'), InputType::Q},
	{static_cast<byte>('r'), InputType::R},
	{static_cast<byte>('s'), InputType::S},
	{static_cast<byte>('t'), InputType::T},
	{static_cast<byte>('u'), InputType::U},
	{static_cast<byte>('v'), InputType::V},
	{static_cast<byte>('w'), InputType::W},
	{static_cast<byte>('x'), InputType::X},
	{static_cast<byte>('y'), InputType::Y},
	{static_cast<byte>('z'), InputType::Z},
	
	{static_cast<byte>('A'), InputType::A},
	{static_cast<byte>('B'), InputType::B},
	{static_cast<byte>('C'), InputType::C},
	{static_cast<byte>('D'), InputType::D},
	{static_cast<byte>('E'), InputType::E},
	{static_cast<byte>('F'), InputType::F},
	{static_cast<byte>('G'), InputType::G},
	{static_cast<byte>('H'), InputType::H},
	{static_cast<byte>('I'), InputType::I},
	{static_cast<byte>('J'), InputType::J},
	{static_cast<byte>('K'), InputType::K},
	{static_cast<byte>('L'), InputType::L},
	{static_cast<byte>('M'), InputType::M},
	{static_cast<byte>('N'), InputType::N},
	{static_cast<byte>('O'), InputType::O},
	{static_cast<byte>('P'), InputType::P},
	{static_cast<byte>('Q'), InputType::Q},
	{static_cast<byte>('R'), InputType::R},
	{static_cast<byte>('S'), InputType::S},
	{static_cast<byte>('T'), InputType::T},
	{static_cast<byte>('U'), InputType::U},
	{static_cast<byte>('V'), InputType::V},
	{static_cast<byte>('W'), InputType::W},
	{static_cast<byte>('X'), InputType::X},
	{static_cast<byte>('Y'), InputType::Y},
	{static_cast<byte>('Z'), InputType::Z},

	// Number Keys
	{static_cast<byte>('1'), InputType::Number_1},
	{static_cast<byte>('2'), InputType::Number_2},
	{static_cast<byte>('3'), InputType::Number_3},
	{static_cast<byte>('4'), InputType::Number_4},
	{static_cast<byte>('5'), InputType::Number_5},
	{static_cast<byte>('6'), InputType::Number_6},
	{static_cast<byte>('7'), InputType::Number_7},
	{static_cast<byte>('8'), InputType::Number_8},
	{static_cast<byte>('9'), InputType::Number_9},
	{static_cast<byte>('0'), InputType::Number_0},

	// "Main" Keys
	{static_cast<byte>(VK_LSHIFT), InputType::Left_Shift},
	{static_cast<byte>(VK_RSHIFT), InputType::Right_Shift},
	{static_cast<byte>(VK_LMENU), InputType::Left_Alt},
	{static_cast<byte>(VK_RMENU), InputType::Right_Alt},
	{static_cast<byte>(VK_LCONTROL), InputType::Left_Ctrl},
	{static_cast<byte>(VK_RCONTROL), InputType::Right_Ctrl},
	{static_cast<byte>(VK_LWIN), InputType::Left_Windows},
	{static_cast<byte>(VK_RWIN), InputType::Right_Windows},
	{static_cast<byte>(VK_TAB), InputType::Tab},
	{static_cast<byte>(VK_SPACE), InputType::Space},
	{static_cast<byte>(VK_OEM_3), InputType::Backtick},
	{static_cast<byte>(VK_OEM_MINUS), InputType::Minus},
	{static_cast<byte>(VK_OEM_PLUS), InputType::Plus},
	{static_cast<byte>(VK_BACK), InputType::Backspace},
	{static_cast<byte>(VK_OEM_4), InputType::Left_Bracket},
	{static_cast<byte>(VK_OEM_6), InputType::Right_Bracket},
	{static_cast<byte>(VK_OEM_1), InputType::Semicolon},
	{static_cast<byte>(VK_OEM_7), InputType::Quote},
	{static_cast<byte>(VK_OEM_5), InputType::Back_Slash},
	{static_cast<byte>(VK_OEM_COMMA), InputType::Comma},
	{static_cast<byte>(VK_OEM_PERIOD), InputType::Period},
	{static_cast<byte>(VK_OEM_2), InputType::Slash},
	{static_cast<byte>(VK_ESCAPE), InputType::Escape},
	{static_cast<byte>(VK_RETURN), InputType::Enter},
	{static_cast<byte>(VK_NUMLOCK), InputType::Number_Lock},
	{static_cast<byte>(VK_SCROLL), InputType::Scroll_Lock},
	{static_cast<byte>(VK_CAPITAL), InputType::Caps_Lock},

	// Navigation Keys
	{static_cast<byte>(VK_HOME), InputType::Home},
	{static_cast<byte>(VK_END), InputType::End},
	{static_cast<byte>(VK_PRIOR), InputType::Page_Up},
	{static_cast<byte>(VK_NEXT), InputType::Page_Down},
	{static_cast<byte>(VK_DELETE), InputType::Delete},
	{static_cast<byte>(VK_UP), InputType::Up},
	{static_cast<byte>(VK_DOWN), InputType::Down},
	{static_cast<byte>(VK_LEFT), InputType::Left},
	{static_cast<byte>(VK_RIGHT), InputType::Right},
	{static_cast<byte>(VK_INSERT), InputType::Insert},
	{static_cast<byte>(VK_SNAPSHOT), InputType::Print_Screen},
	{static_cast<byte>(VK_PRINT), InputType::Print},
	{static_cast<byte>(VK_HELP), InputType::Help},
	{static_cast<byte>(VK_EXECUTE), InputType::Execute},
	{static_cast<byte>(VK_SELECT), InputType::Select},

	// Function Keys
	{static_cast<byte>(VK_F1), InputType::Function_1},
	{static_cast<byte>(VK_F2), InputType::Function_2},
	{static_cast<byte>(VK_F3), InputType::Function_3},
	{static_cast<byte>(VK_F4), InputType::Function_4},
	{static_cast<byte>(VK_F5), InputType::Function_5},
	{static_cast<byte>(VK_F6), InputType::Function_6},
	{static_cast<byte>(VK_F7), InputType::Function_7},
	{static_cast<byte>(VK_F8), InputType::Function_8},
	{static_cast<byte>(VK_F9), InputType::Function_9},
	{static_cast<byte>(VK_F10), InputType::Function_10},
	{static_cast<byte>(VK_F11), InputType::Function_11},
	{static_cast<byte>(VK_F12), InputType::Function_12},
	{static_cast<byte>(VK_F13), InputType::Function_13},
	{static_cast<byte>(VK_F14), InputType::Function_14},
	{static_cast<byte>(VK_F15), InputType::Function_15},
	{static_cast<byte>(VK_F16), InputType::Function_16},
	{static_cast<byte>(VK_F17), InputType::Function_17},
	{static_cast<byte>(VK_F18), InputType::Function_18},
	{static_cast<byte>(VK_F19), InputType::Function_19},
	{static_cast<byte>(VK_F20), InputType::Function_20},
	{static_cast<byte>(VK_F21), InputType::Function_21},
	{static_cast<byte>(VK_F22), InputType::Function_22},
	{static_cast<byte>(VK_F23), InputType::Function_23},
	{static_cast<byte>(VK_F24), InputType::Function_24},

	// Number Pad Keys
	{static_cast<byte>(VK_NUMPAD0), InputType::Numpad_0},
	{static_cast<byte>(VK_NUMPAD1), InputType::Numpad_1},
	{static_cast<byte>(VK_NUMPAD2), InputType::Numpad_2},
	{static_cast<byte>(VK_NUMPAD3), InputType::Numpad_3},
	{static_cast<byte>(VK_NUMPAD4), InputType::Numpad_4},
	{static_cast<byte>(VK_NUMPAD5), InputType::Numpad_5},
	{static_cast<byte>(VK_NUMPAD6), InputType::Numpad_6},
	{static_cast<byte>(VK_NUMPAD7), InputType::Numpad_7},
	{static_cast<byte>(VK_NUMPAD8), InputType::Numpad_8},
	{static_cast<byte>(VK_NUMPAD9), InputType::Numpad_9},
	{static_cast<byte>(VK_DECIMAL), InputType::Numpad_Period},
	{static_cast<byte>(VK_DIVIDE), InputType::Numpad_Slash},
	{static_cast<byte>(VK_MULTIPLY), InputType::Numpad_Astrisk},
	{static_cast<byte>(VK_SUBTRACT), InputType::Numpad_Dash},
	{static_cast<byte>(VK_ADD), InputType::Numpad_Plus},
	// {InputType::Numpad_Enter, {VK_, false}},

// 	// Mouse Inputs
// 	{InputType::Mouse_Left, {static_cast<byte>(NULL), false, "Mouse Left Button"}},
// 	{InputType::Mouse_Right, {static_cast<byte>(NULL), false, "Mouse Right Button"}},
// 	{InputType::Mouse_Center, {static_cast<byte>(NULL), false, "Mouse Center Button"}},
// 	{InputType::Mouse_X, {static_cast<byte>(NULL), true, "Mouse Position X-Axis"}},
// 	{InputType::Mouse_Y, {static_cast<byte>(NULL), true, "Mouse Position Y-Axis"}},
// 	{InputType::Mouse_Scroll_Wheel, {static_cast<byte>(NULL), true, "Mouse Scroll Wheel"}},

// 	// Gamepad Controller Inputs
// 	{InputType::Gamepad_A, {static_cast<byte>(VK_GAMEPAD_A), false, "A"}},
// 	{InputType::Gamepad_B, {static_cast<byte>(VK_GAMEPAD_B), false, "B"}},
// 	{InputType::Gamepad_X, {static_cast<byte>(VK_GAMEPAD_X), false, "X"}},
// 	{InputType::Gamepad_Y, {static_cast<byte>(VK_GAMEPAD_Y), false, "Y"}},
// 	{InputType::Gamepad_Left_Shoulder, {static_cast<byte>(VK_GAMEPAD_LEFT_SHOULDER), false, "L1"}},
// 	{InputType::Gamepad_Right_Shoulder,
// 		{static_cast<byte>(VK_GAMEPAD_RIGHT_SHOULDER), false, "R1"}},
// 	{InputType::Gamepad_Left_Trigger, {static_cast<byte>(VK_GAMEPAD_LEFT_TRIGGER), true, "L2"}},
// 	{InputType::Gamepad_Right_Trigger, {static_cast<byte>(VK_GAMEPAD_RIGHT_TRIGGER), true, "R2"}},
// 	{InputType::Gamepad_Dpad_Up, {static_cast<byte>(VK_GAMEPAD_DPAD_UP), false, "Up"}},
// 	{InputType::Gamepad_Dpad_Down, {static_cast<byte>(VK_GAMEPAD_DPAD_DOWN), false, "Down"}},
// 	{InputType::Gamepad_Dpad_Left, {static_cast<byte>(VK_GAMEPAD_DPAD_LEFT), false, "Left"}},
// 	{InputType::Gamepad_Dpad_Right, {static_cast<byte>(VK_GAMEPAD_DPAD_RIGHT), false, "Right"}},
// 	{InputType::Gamepad_Menu, {static_cast<byte>(VK_GAMEPAD_MENU), false, "Start"}},
// 	{InputType::Gamepad_View, {static_cast<byte>(VK_GAMEPAD_VIEW), false, "Select"}},
// 	{InputType::Gamepad_Left_Thumbstick_X,
// 		{static_cast<byte>(NULL), true, "Left Thumbstick X-Axis"}},
// 	{InputType::Gamepad_Left_Thumbstick_Y,
// 		{static_cast<byte>(NULL), true, "Left Thumbstick Y-Axis"}},
// 	{InputType::Gamepad_Right_Thumbstick_X,
// 		{static_cast<byte>(NULL), true, "Right Thumbstick X-Axis"}},
// 	{InputType::Gamepad_Right_Thumbstick_Y,
// 		{static_cast<byte>(NULL), true, "Right Thumbstick Y-Axis"}},
};